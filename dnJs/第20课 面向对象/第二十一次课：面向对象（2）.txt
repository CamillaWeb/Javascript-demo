回顾：
	闭包和作用域
		*函数调用本质其实是创建一个临时的闭包空间
		*闭包寻找变量的时候，作用域是就近原则
	JS执行过程
		1.先提升（先提升函数，再提升变量，如果名字一样，变量提升会覆盖函数提升）
		2.再执行，如果遇到闭包创建
		3.在闭包空间中反复1和2
	类(class)和对象(object)
		面向对象
		类：就是一组对象共同的属性和行为的抽象，抽象的模板
		对象：就是具体的内存空间中的一块空间，实实在在活生生的一个实例
作业点评：
	作业解答
学习要求：
	完成作业和到课者加学分（学分制规则在VIP群共享中）
知识点：
	构造器
		怎么定义构造器：跟普通函数无异
		构造器函数和普通函数的区别
			区别1：构造器(函数)都是名词，普通函数通常是动词（因为函数都是行为和方法、功能）
			区别2：构造器(函数)名字的首字母一定是大写，普通函数名字首字母一定是小写
			区别3：构造器(函数)的调用一定是通过new关键字来调用，普通函数不用new
			区别4：构造器(函数)在堆中创建闭包，生命周期长，我们更加注重在堆中开辟的这块内存空间(目的是要操作内存空间)，返回的其实是堆中这块动态闭包空间的地址普通函数在堆中创建临时闭包，生命周期短，我们更加注重函数功能和返回结果，返回的return关键字返回的结果
		如何使用：
			通过new关键字调用构造器
		作用：
			构造器函数是创建对象的唯一途径
	this关键字
		英文的意思:当前的，这个的
		含义：当前创建出来的这块内存空间
	私有成员
		通过在this作用域中定义var局部的变量或者函数来实现
	原型
		每一个构造器函数，都有一个原型（对象），在堆中，所谓的原型其实就是一个对象
	扩展系统构造器的原型
		每一个通过该构造器函数new出来的对象，他们都有一个默认的属性叫做prototype，这个对象的地址就是构造器里面prototype的地址
	原型链
英文单词：
	prototype[原型]、public[共有的]、private[私有的]、protected[受保护的]、constructor[构造器]、this[这个]
作业：
	请参考“作业”文件夹下的文档内容，并按时完成。

做一家受人尊敬的企业，做一位受人尊敬的老师。  -by 动脑学院